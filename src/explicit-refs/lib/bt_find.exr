(* Find exercise ~ Alice Agnoletto *)

let n_left = { data <= 12; left <= 0; right <= 0}    (* 0 in head signals null *)
in let n_right = { data <= 44; left <= 0; right <= 0}
in let n_root = { data <= 33; left <= n_left ; right <= n_right }
in let t1 = { root <= n_root ; length <= 3} 
in letrec find_help (nd) = proc (target) 
{
	if number?(nd)
	then if nd = target then zero?(0) else zero?(1)
	else 
		(
		if nd.data = target 
		then zero?(0)
		else 
			(
			if target << nd.data  
			then ((find_help nd.left) target )
			else ((find_help nd.right) target )
			)
		)
}
in let find_bt =  proc (t) { (find_help t.root) }
in ((find_bt t1) 12)